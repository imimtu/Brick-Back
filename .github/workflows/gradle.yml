# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      ## checkout
      - name: checkout
        uses: actions/checkout@v3

      ## set up jdk 11
      - name: set up jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## gradle build
      - name: build with gradle
        run: ./gradlew bootJar

      ## brick-server 빌드 및 도커허브에 push
      - name: brick-server docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/brick-server . -f brick-server.dockerfile
          docker push ${{ secrets.DOCKER_REPO }}/brick-server

      ## brick-proxy 빌드 및 도커허브에 push
      - name: brick-proxy docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/brick-proxy . -f brick-proxy.dockerfile
          docker push ${{ secrets.DOCKER_REPO }}/brick-proxy
          
      ## brick-db 빌드 및 도커허브에 push
#       - name: brick-db docker build and push
#         run: |
#           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#           docker build -t ${{ secrets.DOCKER_REPO }}/brick-db . -f brick-db.dockerfile
#           docker push ${{ secrets.DOCKER_REPO }}/brick-db
    
      ## docker compose up finally!
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/brick-server
            sudo docker pull ${{ secrets.DOCKER_REPO }}/brick-proxy
            docker-compose up -d
            docker image prune -f
